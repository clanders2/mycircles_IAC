AWSTemplateFormatVersion: '2010-09-09'
Description: AWS infrastructure for web, API, and data layer

Resources:
  # Amazon VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default

  # Amazon VPC Subnets
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref VPC

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: 10.0.2.0/24
      VpcId: !Ref VPC

  # Amazon S3
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: your-s3-bucket-name

  # Amazon RDS
  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t2.micro
      Engine: postgres
      MasterUsername: root
      MasterUserPassword: root
      MultiAZ: true
      DBSubnetGroupName:
        Ref: DBSubnetGroup

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS instance
      SubnetIds:
        - !Ref Subnet1
        - !Ref Subnet2

  # Amazon EC2
  EC2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: your-launch-template-name
      LaunchTemplateData:
        ImageId: ami-xxxxxxxx
        InstanceType: t2.micro
        SecurityGroupIds:
          - sg-xxxxxxxx

  EC2AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId:
          Ref: EC2LaunchTemplate
        Version: !GetAtt EC2LaunchTemplate.LatestVersionNumber
      MinSize: 1
      MaxSize: 5
      DesiredCapacity: 2
      VPCZoneIdentifier:
        - !Ref Subnet1
        - !Ref Subnet2

  # Amazon CloudFront
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Origins:
          - DomainName: !GetAtt S3Bucket.DomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: ""
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD

  # Elastic Load Balancing (ELB)
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets:
        - !Ref Subnet1
        - !Ref Subnet2
      Type: application

#  Amazon API Gateway
  RestApi:
    Type: AWS  
# Amazon API Gateway
  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: PeopleCardAPI

  # AWS Identity and Access Management (IAM)
  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: your-role-name
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/your-managed-policy-name
